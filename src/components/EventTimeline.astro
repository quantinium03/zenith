---
const { events = [
  { time: "21 April 2025", title: "Code Cadet", description: "Coding Competition" },
  { time: "23 April 2025", title: "Xunbao", description: "Online Quiz" },
  { time: "24 April 2025", title: "Tech and Beyond", description: "Interactive Workshop" },
  { time: "25-26 April 2025", title: "Zenith 4.0", description: "Hackathon" },
] } = Astro.props;
---

<div class="mt-10 text-center">
  <h1 class="text-6xl underline tracking-tight">Hackathon Event Timeline</h1>
</div>

<div class="relative max-w-[800px] mx-auto py-[40px] px-[20px]">
  <div id="rocket" class="rocket"><img src="/rocket.png" class="h-30 rotate-180 mt-20 ml-10 md:ml-0"/></div>
  <div class="timeline relative w-full" id="timeline">
    {events.map((event, index) => (
      <div class={`event ${index % 2 === 0 ? 'left' : 'right'}`} data-animate>
        <div class="event-content">
          <div class="event-time">{event.time}</div>
          <h3>{event.title}</h3>
          <p>{event.description}</p>
        </div>
      </div>
    ))}
  </div>
</div>

<style>
  .timeline {
    position: relative;
    width: 100%;
  }
  
  .timeline:after {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    height: 100%;
    width: 4px;
    background: linear-gradient(to bottom, #0a2342, #2a6ebb, #4a97dd);
    transform: translateX(-50%);
    border-radius: 4px;
  }
  
  .rocket {
    position: absolute;
    font-size: 2.5rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.7));
    transition: top 0.3s ease-out;
  }
  
  .event {
    position: relative;
    width: 45%;
    margin: 60px 0;
    padding: 20px;
    background-image: url('https://www.solarsystemscope.com/images/panels/panel-type-3.png');
    background-size: cover;
    background-position: center;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
    opacity: 0; /* Start hidden */
  }
  
  .event:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.15);
  }
  
  .event.left {
    margin-left: -3%;
  }
  
  .event.right {
    margin-left: 58%;
  }
  
  .event:before {
    content: '';
    position: absolute;
    top: 50%;
    width: 16px;
    height: 16px;
    background: #2a6ebb;
    border-radius: 50%;
    transform: translateY(-50%);
    border: 3px solid white;
    box-shadow: 0 0 0 3px #4a97dd;
  }
  
  .event.left:before {
    right: -42px;
  }
  
  .event.right:before {
    left: -42px;
  }
  
  .event-time {
    font-weight: bold;
    color: #2a6ebb;
    margin-bottom: 5px;
    font-size: 1.1rem;
  }
  
  .event-content h3 {
    margin: 0 0 10px 0;
    color: #ffffff;
    font-size: 1.4rem;
  }
  
  .event-content p {
    margin: 0;
    color: #d1d1d1;
    font-size: 1rem;
  }
  
  /* Animation Keyframes */
  .event.left.animate {
    animation: slideInLeft 0.6s ease-out forwards;
    opacity: 1;
  }
  
  .event.right.animate {
    animation: slideInRight 0.6s ease-out forwards;
    opacity: 1;
  }
  
  @keyframes slideInLeft {
    from {
      transform: translateX(-100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes slideInRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @media (max-width: 768px) {
    .event {
      width: 80%;
      margin: 30px auto;
    }
    
    .event.left, .event.right {
      margin-left: 4rem;
      margin-right: auto;
    }
    
    .event:before {
      left: -30px;
    }
    
    .event.right:before {
      left: -30px;
    }
    
    .timeline:after {
      left: 20px;
    }
    
    .rocket {
      left: 20px;
    }
    
    /* Adjust animations for mobile */
    .event.left.animate, .event.right.animate {
      animation: slideInLeft 0.6s ease-out forwards;
      opacity: 1;
    }
  }
</style>

<script>
  // Rocket animation (unchanged)
  function updateRocketPosition() {
    const rocket = document.getElementById('rocket');
    const timeline = document.getElementById('timeline');
    
    if (!rocket || !timeline) return;
    
    const timelineRect = timeline.getBoundingClientRect();
    
    const timelineTop = timelineRect.top;
    const timelineHeight = timelineRect.height;
    const windowHeight = window.innerHeight;
    
    if (timelineTop < windowHeight && timelineTop + timelineHeight > 0) {
      const visibleStart = Math.max(0, -timelineTop);
      const visibleEnd = Math.min(timelineHeight, windowHeight - timelineTop);
      const visibleHeight = visibleEnd - visibleStart;
      
      const rocketPosition = visibleStart + (visibleHeight * 0.5);
      
      const constrainedPosition = Math.max(
        0, 
        Math.min(rocketPosition, timelineHeight - 50)
      );
      
      rocket.style.top = `${constrainedPosition}px`;
    }
  }
  
  // Slide-in animation with Intersection Observer
  function animateEvents() {
    const events = document.querySelectorAll('.event[data-animate]');
    
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const event = entry.target;
            event.classList.add('animate');
            observer.unobserve(event); // Stop observing once animated
          }
        });
      },
      { threshold: 0.2 } // Trigger when 20% of the event is visible
    );
    
    events.forEach((event) => observer.observe(event));
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    window.addEventListener('scroll', updateRocketPosition);
    window.addEventListener('resize', updateRocketPosition);
    updateRocketPosition();
    animateEvents();
  });
</script>
