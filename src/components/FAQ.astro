---
const faqs = [
  {
    question: "What is Zenith 4.0?",
    answer: "Zenith 4.0 is a 24-hour hackathon where participants dive into a coding marathon to test their creativity, resilience, and problem-solving skills by building innovative solutions for real-world challenges."
  },
  {
    question: "What is a hackathon?",
    answer: "A hackathon is an event where individuals or teams engage in fast-paced, collaborative software or hardware development, typically over 24 to 48 hours."
  },
  {
    question: "How do i register?",
    answer: 'You can register by clicking on the "apply with devfolio" button on the home page and filling out the form.'
  },
  {
    question: "Is there any registration fee?",
    answer: 'No. participation in Zenith 4.0 is completely free for all registered participants.'
  },
  {
    question: "Do I need a team to participate?",
    answer: "Yes, participants must form a team of 2 to 4 students to take part in the hackathon."
  },
  {
    question: "What is the participation criteria?",
    answer: "You must be a full-time university student. Students from any branch and year are eligible to participate."
  },
  {
    question: "Will meals be provided?",
    answer: "Yes, meals will be provided. Refer to the event timeline for more details."
  },
  {
    question: "What should i bring to a hackathon?",
    answer: "You'll need your laptop, chargers, your student id and any other personal equipment you may need."
  },
  {
    question: "How will the projects be judged?",
    answer: "Projects will be judged based on innovation, technical complexity, design, functionality, and real-world impact. Our panel of industry experts will evaluate all submissions."
  },
  {
    question: "What is the prize if you end up winning?",
    answer: "Winners will receive cash prizes and exciting goodies from a pool of ₹1 lakh+. More details will be announced soon."
  }
];
---

<section id="faq" class="relative py-12 md:py-16 z-20 text-white overflow-x-hidden">
  <div class="max-w-4xl mx-auto px-4">
    <h1 class="text-4xl lg:text-6xl font-bold underline text-center mb-12 tracking-wider">
      Frequently Asked Questions
    </h1>

    <div class="space-y-4">
      {faqs.map((faq, index) => (
        <div
          class={`faq-item rounded-lg overflow-hidden border border-blue-500/30 shadow-lg shadow-blue-900/20 bg-gray-800/50 backdrop-blur-sm opacity-0 transition-all duration-300 ${
            index % 2 === 0 ? 'faq-left' : 'faq-right'
          }`}
          data-animate
        >
          <button
            class="faq-question w-full text-left p-4 flex justify-between items-center text-xl font-semibold text-white hover:bg-blue-900/20 transition-colors duration-300 border-b border-blue-900"
          >
            <span>{faq.question}</span>
            <span class="text-2xl transition-transform duration-300">✦</span>
          </button>
          <div class="faq-answer p-0 text-gray-300 text-lg overflow-hidden transition-all duration-500 max-h-0">
            <p class="p-4">{faq.answer}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .faq-item.active .faq-answer {
    max-height: 200px;
  }

  .faq-item.active .faq-question {
    background-color: rgba(0, 0, 255, 0.2);
  }

  .faq-item.active .faq-question span:last-child {
    transform: rotate(45deg);
  }

  .faq-item.faq-left.animate {
    animation: slideInLeft 0.6s ease-out forwards;
  }

  .faq-item.faq-right.animate {
    animation: slideInRight 0.6s ease-out forwards;
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @media (max-width: 768px) {
    .faq-item.active .faq-answer {
      max-height: 300px;
    }

    .faq-item.faq-left.animate,
    .faq-item.faq-right.animate {
      animation: slideInLeft 0.6s ease-out forwards;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const faqItems = document.querySelectorAll('.faq-item');

    faqItems.forEach((item) => {
      const question = item.querySelector('.faq-question');

      question.addEventListener('click', () => {
        item.classList.toggle('active');

        faqItems.forEach((otherItem) => {
          if (otherItem !== item && otherItem.classList.contains('active')) {
            otherItem.classList.remove('active');
          }
        });
      });
    });

    if (window.innerWidth > 768) {
      faqItems[0].classList.add('active');
    }

    const animateFaqs = () => {
      const faqs = document.querySelectorAll('.faq-item[data-animate]');

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const faq = entry.target;
              faq.classList.add('animate');
              observer.unobserve(faq);
            }
          });
        },
        { threshold: 0.2 }
      );

      faqs.forEach((faq) => observer.observe(faq));
    };

    animateFaqs();
  });
</script>
